// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NickRI/fiatconv/external (interfaces: RemoteClient)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	decimal "github.com/shopspring/decimal"
	reflect "reflect"
)

// MockRemoteClient is a mock of RemoteClient interface
type MockRemoteClient struct {
	ctrl     *gomock.Controller
	recorder *MockRemoteClientMockRecorder
}

// MockRemoteClientMockRecorder is the mock recorder for MockRemoteClient
type MockRemoteClientMockRecorder struct {
	mock *MockRemoteClient
}

// NewMockRemoteClient creates a new mock instance
func NewMockRemoteClient(ctrl *gomock.Controller) *MockRemoteClient {
	mock := &MockRemoteClient{ctrl: ctrl}
	mock.recorder = &MockRemoteClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRemoteClient) EXPECT() *MockRemoteClientMockRecorder {
	return m.recorder
}

// RequestRate mocks base method
func (m *MockRemoteClient) RequestRate(arg0 context.Context, arg1, arg2 string) (decimal.Decimal, error) {
	ret := m.ctrl.Call(m, "RequestRate", arg0, arg1, arg2)
	ret0, _ := ret[0].(decimal.Decimal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestRate indicates an expected call of RequestRate
func (mr *MockRemoteClientMockRecorder) RequestRate(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestRate", reflect.TypeOf((*MockRemoteClient)(nil).RequestRate), arg0, arg1, arg2)
}
